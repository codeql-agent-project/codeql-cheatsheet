{ 
    "id": "taint-tracking-to-evals-call-with-path-visualization", 
    "name": "Taint-tracking to 'eval' calls (with path visualization)", 
    "date": "2022-10-20T13:10:11+07:00", 
    "language": "javascript", 
    "description": "Tracks user-controlled values into 'eval' calls (special case of js/code-injection), and generates a visualizable path from the source to the sink.", 
    "author": "LGTM", 
    "authorURL": "https://lgtm.com/query/lang:java/",
    "tags": ["pattern","javascript","expert"], 
    "categories": [], 
    "code": "import javascript\nimport DataFlow\nimport DataFlow::PathGraph\nclass EvalTaint extends TaintTracking::Configuration {\n  EvalTaint() { this = \"EvalTaint\" }\n  override predicate isSource(Node node) { node instanceof RemoteFlowSource }\n  override predicate isSink(Node node) { node = globalVarRef(\"eval\").getACall().getArgument(0) }\n}\nfrom EvalTaint cfg, PathNode source, PathNode sink\nwhere cfg.hasFlowPath(source, sink)\nselect sink.getNode(), source, sink, \"Eval with user-controlled input from $@.\", source.getNode(),\n  \"here\"", 
    "complexity": "expert" 
}